import { useState, useEffect, useRef } from 'react';
import { motion, AnimatePresence } from 'framer-motion';

function SupportChat() {
  const [isOpen, setIsOpen] = useState(false);
  const [messages, setMessages] = useState(JSON.parse(localStorage.getItem('chatMessages')) || []);
  const [input, setInput] = useState('');
  const messagesEndRef = useRef(null);

  useEffect(() => {
    localStorage.setItem('chatMessages', JSON.stringify(messages));
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });
  }, [messages]);

  const sendMessage = () => {
    if (!input.trim()) return;
    const newMessages = [...messages, { text: input, isUser: true }];
    setMessages(newMessages);
    setInput('');
    setTimeout(() => {
      let reply = '–í–∏–±–∞—á—Ç–µ, —è –±–æ—Ç –ø—ñ–¥—Ç—Ä–∏–º–∫–∏. –ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è, –±—É–¥—å –ª–∞—Å–∫–∞, –ø—ñ–∑–Ω—ñ—à–µ.';
      if (/–ø—Ä–∏–≤—ñ—Ç|–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π|hello/i.test(input)) reply = '–ü—Ä–∏–≤—ñ—Ç! –Ø–∫ —è –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏?';
      else if (/–ø–æ–ø–æ–≤–Ω–∏—Ç–∏|–±–∞–ª–∞–Ω—Å/i.test(input)) reply = '–©–æ–± –ø–æ–ø–æ–≤–Ω–∏—Ç–∏ –±–∞–ª–∞–Ω—Å, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É "–ü–æ–ø–æ–≤–Ω–∏—Ç–∏ –¥–µ–º–æ –±–∞–ª–∞–Ω—Å" —É –ö–∞–±—ñ–Ω–µ—Ç—ñ.';
      else if (/–∫–∞–∑–∏–Ω–æ/i.test(input)) reply = '–£ –Ω–∞—à–æ–º—É –¥–µ–º–æ-–∫–∞–∑–∏–Ω–æ –º–æ–∂–Ω–∞ –∑–∞–ø—É—Å–∫–∞—Ç–∏ —Å–ª–æ—Ç-–º–∞—à–∏–Ω—É –ø—Ä—è–º–æ –∑–∞—Ä–∞–∑!';
      else if (/–º–∞—Ç—á/i.test(input)) reply = '–†–µ–∞–ª—å–Ω—ñ –º–∞—Ç—á—ñ –æ–Ω–æ–≤–ª—é—é—Ç—å—Å—è —â–æ—Ö–≤–∏–ª–∏–Ω–∏ —É –≤–∫–ª–∞–¥—Ü—ñ Live.';
      setMessages([...newMessages, { text: reply, isUser: false }]);
    }, 800);
  };

  return (
    <>
      <button
        className="fixed right-0 bottom-8 bg-[#00bfff] text-[#14213d] w-12 h-12 rounded-full shadow-glow flex items-center justify-center text-xl hover:bg-[#00e0ff]"
        onClick={() => setIsOpen(!isOpen)}
      >
        üí¨
      </button>
      <AnimatePresence>
        {isOpen && (
          <motion.div
            className="fixed right-0 bottom-20 w-80 bg-[#14213d] rounded-tl-lg rounded-bl-lg shadow-glow flex flex-col max-h-[400px]"
            initial={{ x: '100%' }}
            animate={{ x: 0 }}
            exit={{ x: '100%' }}
            transition={{ duration: 0.3 }}
          >
            <div className="bg-[#00bfff] text-[#14213d] font-bold p-3 rounded-tl-lg flex justify-between">
              –ü—ñ–¥—Ç—Ä–∏–º–∫–∞
              <button className="text-xl" onClick={() => setIsOpen(false)}>
                ‚úï
              </button>
            </div>
            <div className="flex-1 p-4 overflow-y-auto bg-[#0d1b2a]">
              {messages.map((msg, index) => (
                <div
                  key={index}
                  className={`p-2 rounded-lg mb-2 max-w-[85%] ${msg.isUser ? 'bg-[#00bfff] text-[#14213d] ml-auto' : 'bg-[#1b263b] text-[#00d4ff]'}`}
                >
                  {msg.text}
                </div>
              ))}
              <div ref={messagesEndRef} />
            </div>
            <div className="p-3 bg-[#1b263b] flex">
              <input
                type="text"
                value={input}
                onChange={( opublik

System: * Today's date and time is 02:23 PM EEST on Tuesday, July 01, 2025.